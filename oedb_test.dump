--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: grid; Type: SCHEMA; Schema: -; Owner: test
--

CREATE SCHEMA grid;


ALTER SCHEMA grid OWNER TO test;

--
-- Name: reference; Type: SCHEMA; Schema: -; Owner: oeuser
--

CREATE SCHEMA reference;


ALTER SCHEMA reference OWNER TO oeuser;

SET search_path = public, pg_catalog;

--
-- Name: db_to_csv(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION db_to_csv(path text) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
  tables RECORD;
  statement TEXT;
begin
  FOR tables IN 
    SELECT (table_schema || '.' || table_name) AS schema_table
    FROM information_schema.tables t INNER JOIN information_schema.schemata s 
    ON s.schema_name = t.table_schema 
    WHERE t.table_schema NOT IN ('pg_catalog', 'information_schema', 'configuration')
    ORDER BY schema_table
  LOOP
    statement := 'COPY ' || tables.schema_table || ' TO ''' || path || '/' || tables.schema_table || '.csv' ||''' DELIMITER '';'' CSV HEADER';
    EXECUTE statement;
  END LOOP;
  return;  
end;
$$;


ALTER FUNCTION public.db_to_csv(path text) OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: _comment_base; Type: TABLE; Schema: public; Owner: ckan_perm; Tablespace: 
--

CREATE TABLE _comment_base (
    _id bigint NOT NULL,
    origin character varying(2000),
    method character varying(3000),
    assumption json DEFAULT '[]'::json
);


ALTER TABLE public._comment_base OWNER TO ckan_perm;

--
-- Name: _edit_base; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE _edit_base (
    _id bigint NOT NULL,
    _message text,
    _user character varying(50),
    _submitted timestamp without time zone,
    _autocheck boolean,
    _humancheck boolean,
    _type character varying(8)
);


ALTER TABLE public._edit_base OWNER TO postgres;

--
-- Name: _insert_base; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE _insert_base (
    _message text,
    _user character varying(50),
    _submitted timestamp without time zone,
    _autocheck boolean,
    _humancheck boolean,
    _type character varying(8)
);


ALTER TABLE public._insert_base OWNER TO postgres;

SET search_path = grid, pg_catalog;

--
-- Name: deu_voronoi; Type: TABLE; Schema: grid; Owner: test; Tablespace: 
--

CREATE TABLE deu_voronoi (
    id integer NOT NULL,
    geom public.geometry
);


ALTER TABLE grid.deu_voronoi OWNER TO test;

--
-- Name: voronoi; Type: TABLE; Schema: grid; Owner: test; Tablespace: 
--

CREATE TABLE voronoi (
    geom public.geometry(Polygon,4326),
    id integer NOT NULL
);


ALTER TABLE grid.voronoi OWNER TO test;

SET search_path = reference, pg_catalog;

--
-- Name: entries; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE entries (
    entries_id integer NOT NULL,
    jabref_eid character varying(8) DEFAULT NULL::character varying,
    database_id integer,
    entry_types_id integer,
    cite_key character varying(100) DEFAULT NULL::character varying,
    abstract text,
    address text,
    annote text,
    author text,
    booktitle text,
    chapter text,
    comment text,
    crossref text,
    doi text,
    edition text,
    editor text,
    eid text,
    file text,
    howpublished text,
    institution text,
    journal text,
    key_ text,
    keywords text,
    language text,
    location text,
    month text,
    note text,
    number text,
    organization text,
    pages text,
    pdf text,
    pmid text,
    priority text,
    ps text,
    publisher text,
    qualityassured text,
    ranking text,
    relevance text,
    school text,
    search text,
    series text,
    title text,
    type text,
    url text,
    volume text,
    year text
);


ALTER TABLE reference.entries OWNER TO oeuser;

--
-- Name: strings; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE strings (
    strings_id integer NOT NULL,
    label character varying(100) DEFAULT NULL::character varying,
    content character varying(200) DEFAULT NULL::character varying,
    database_id integer
);


ALTER TABLE reference.strings OWNER TO oeuser;

SET search_path = grid, pg_catalog;

--
-- Name: substations_deu_voronoi; Type: TABLE; Schema: grid; Owner: test; Tablespace: 
--

CREATE TABLE substations_deu_voronoi (
    lon double precision,
    lat double precision,
    voltage text,
    power_typ text,
    osm_id bigint,
    osm_typ text,
    osm_www text,
    frequency text,
    name text,
    ref text,
    substation text,
    operator text,
    status smallint,
    visible smallint,
    geom public.geometry(Point,4326),
    subst_id integer
);


ALTER TABLE grid.substations_deu_voronoi OWNER TO test;

--
-- Name: substations_dummy; Type: TABLE; Schema: grid; Owner: test; Tablespace: 
--

CREATE TABLE substations_dummy (
    subst_id integer NOT NULL,
    geom public.geometry(Point,4326),
    lon double precision,
    lat double precision,
    voltage character varying,
    power_typ character varying,
    osm_id bigint,
    osm_typ character varying,
    osm_www character varying,
    frequency character varying,
    name character varying,
    ref character varying,
    substation character varying,
    operator character varying,
    status integer,
    visible integer
);


ALTER TABLE grid.substations_dummy OWNER TO test;

--
-- Name: znes_deu_substations; Type: TABLE; Schema: grid; Owner: test; Tablespace: 
--

CREATE TABLE znes_deu_substations (
    id integer NOT NULL,
    lon double precision NOT NULL,
    lat double precision NOT NULL,
    voltage text,
    power_typ text,
    osm_id bigint NOT NULL,
    osm_typ text NOT NULL,
    osm_www text NOT NULL,
    frequency text,
    name text,
    ref text,
    substation text,
    operator text,
    dbahn text,
    status smallint NOT NULL,
    visible smallint NOT NULL,
    geom public.geometry(Point,4326)
);


ALTER TABLE grid.znes_deu_substations OWNER TO test;

--
-- Name: uw_id_seq; Type: SEQUENCE; Schema: grid; Owner: test
--

CREATE SEQUENCE uw_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE grid.uw_id_seq OWNER TO test;

--
-- Name: uw_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: test
--

ALTER SEQUENCE uw_id_seq OWNED BY znes_deu_substations.id;


--
-- Name: voronoi_id_seq; Type: SEQUENCE; Schema: grid; Owner: test
--

CREATE SEQUENCE voronoi_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE grid.voronoi_id_seq OWNER TO test;

--
-- Name: voronoi_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: test
--

ALTER SEQUENCE voronoi_id_seq OWNED BY voronoi.id;


--
-- Name: znes_deu_gridcells_qgis; Type: TABLE; Schema: grid; Owner: test; Tablespace: 
--

CREATE TABLE znes_deu_gridcells_qgis (
    id integer NOT NULL,
    geom public.geometry(MultiPolygon,4326),
    subst_id integer
);


ALTER TABLE grid.znes_deu_gridcells_qgis OWNER TO test;

--
-- Name: znes_deu_gridcells_qgis_id_seq; Type: SEQUENCE; Schema: grid; Owner: test
--

CREATE SEQUENCE znes_deu_gridcells_qgis_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE grid.znes_deu_gridcells_qgis_id_seq OWNER TO test;

--
-- Name: znes_deu_gridcells_qgis_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: test
--

ALTER SEQUENCE znes_deu_gridcells_qgis_id_seq OWNED BY znes_deu_gridcells_qgis.id;


--
-- Name: znes_deu_substations_filtered; Type: TABLE; Schema: grid; Owner: test; Tablespace: 
--

CREATE TABLE znes_deu_substations_filtered (
    lon double precision,
    lat double precision,
    voltage text,
    power_typ text,
    osm_id bigint,
    osm_typ text,
    osm_www text,
    frequency text,
    name text,
    ref text,
    substation text,
    operator text,
    status smallint,
    visible smallint,
    geom public.geometry(Point,4326),
    subst_id integer NOT NULL
);


ALTER TABLE grid.znes_deu_substations_filtered OWNER TO test;

--
-- Name: znes_deu_substations_filtered_subst_id_seq; Type: SEQUENCE; Schema: grid; Owner: test
--

CREATE SEQUENCE znes_deu_substations_filtered_subst_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE grid.znes_deu_substations_filtered_subst_id_seq OWNER TO test;

--
-- Name: znes_deu_substations_filtered_subst_id_seq; Type: SEQUENCE OWNED BY; Schema: grid; Owner: test
--

ALTER SEQUENCE znes_deu_substations_filtered_subst_id_seq OWNED BY znes_deu_substations_filtered.subst_id;


SET search_path = public, pg_catalog;

--
-- Name: _comment_base_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE _comment_base_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public._comment_base_id_seq OWNER TO ckan_perm;

--
-- Name: _comment_base_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ckan_perm
--

ALTER SEQUENCE _comment_base_id_seq OWNED BY _comment_base._id;


--
-- Name: _edit_base__id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE _edit_base__id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public._edit_base__id_seq OWNER TO postgres;

--
-- Name: _edit_base__id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE _edit_base__id_seq OWNED BY _edit_base._id;


--
-- Name: alembic_version; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE alembic_version (
    version_num character varying(32) NOT NULL
);


ALTER TABLE public.alembic_version OWNER TO postgres;

--
-- Name: ckan_datastore; Type: TABLE; Schema: public; Owner: ckan_perm; Tablespace: 
--

CREATE TABLE ckan_datastore (
    id integer NOT NULL,
    schema character varying(30),
    "table" character varying(30),
    resource character varying(40),
    dataset character varying(30)
);


ALTER TABLE public.ckan_datastore OWNER TO ckan_perm;

--
-- Name: ckan_datastore_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE ckan_datastore_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ckan_datastore_id_seq OWNER TO ckan_perm;

--
-- Name: ckan_datastore_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ckan_perm
--

ALTER SEQUENCE ckan_datastore_id_seq OWNED BY ckan_datastore.id;


--
-- Name: entries_entries_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE entries_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.entries_entries_id_seq OWNER TO ckan_perm;

--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE entry_group_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.entry_group_entries_id_seq OWNER TO ckan_perm;

--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE entry_types_entry_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.entry_types_entry_types_id_seq OWNER TO ckan_perm;

--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE group_types_group_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.group_types_group_types_id_seq OWNER TO ckan_perm;

--
-- Name: groups_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE groups_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.groups_groups_id_seq OWNER TO ckan_perm;

--
-- Name: id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.id_seq OWNER TO postgres;

--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE jabref_database_database_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.jabref_database_database_id_seq OWNER TO ckan_perm;

--
-- Name: meta_search; Type: MATERIALIZED VIEW; Schema: public; Owner: postgres; Tablespace: 
--

CREATE MATERIALIZED VIEW meta_search AS
 SELECT pg_namespace.nspname AS schema,
    pg_class.relname AS "table",
    to_tsvector('english'::regconfig, ((pg_class.relname)::text || obj_description(pg_class.oid))) AS comment
   FROM (pg_class
     JOIN pg_namespace ON ((pg_namespace.oid = pg_class.relnamespace)))
  WHERE ((((pg_class.relkind = ANY (ARRAY['r'::"char", 'v'::"char"])) AND has_table_privilege("current_user"(), pg_class.oid, 'SELECT'::text)) AND (NOT ((pg_namespace.nspname ~ '^pg_'::text) OR (pg_namespace.nspname = 'information_schema'::name)))) AND (NOT (pg_namespace.nspname ~ '^_'::text)))
  ORDER BY pg_namespace.nspname
  WITH NO DATA;


ALTER TABLE public.meta_search OWNER TO postgres;

--
-- Name: reference_to_entries; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE reference_to_entries (
    ref_id bigint NOT NULL,
    ref_data_json json,
    schema_name character varying NOT NULL,
    tbl_name character varying NOT NULL,
    changed_by character varying(20) DEFAULT "current_user"(),
    lastmodified timestamp without time zone DEFAULT now()
);


ALTER TABLE public.reference_to_entries OWNER TO postgres;

--
-- Name: strings_strings_id_seq; Type: SEQUENCE; Schema: public; Owner: ckan_perm
--

CREATE SEQUENCE strings_strings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.strings_strings_id_seq OWNER TO ckan_perm;

--
-- Name: table_tags; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE table_tags (
    tag bigint,
    schema_name character varying(100),
    table_name character varying(100)
);


ALTER TABLE public.table_tags OWNER TO postgres;

--
-- Name: tags; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE tags (
    id bigint NOT NULL,
    name character varying(40),
    color integer
);


ALTER TABLE public.tags OWNER TO postgres;

--
-- Name: tags_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tags_id_seq OWNER TO postgres;

--
-- Name: tags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE tags_id_seq OWNED BY tags.id;


--
-- Name: test_cor; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE test_cor (
    id bigint NOT NULL,
    origin character varying(2000),
    method character varying(3000),
    assumption json
);


ALTER TABLE public.test_cor OWNER TO postgres;

SET search_path = reference, pg_catalog;

--
-- Name: entries_entries_id_seq; Type: SEQUENCE; Schema: reference; Owner: oeuser
--

CREATE SEQUENCE entries_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE reference.entries_entries_id_seq OWNER TO oeuser;

--
-- Name: entries_entries_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: oeuser
--

ALTER SEQUENCE entries_entries_id_seq OWNED BY entries.entries_id;


--
-- Name: entry_group; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE entry_group (
    entries_id integer NOT NULL,
    groups_id integer NOT NULL
);


ALTER TABLE reference.entry_group OWNER TO oeuser;

--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE; Schema: reference; Owner: oeuser
--

CREATE SEQUENCE entry_group_entries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE reference.entry_group_entries_id_seq OWNER TO oeuser;

--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: oeuser
--

ALTER SEQUENCE entry_group_entries_id_seq OWNED BY entry_group.entries_id;


--
-- Name: entry_types; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE entry_types (
    entry_types_id integer NOT NULL,
    label text,
    abstract character varying(3) DEFAULT NULL::character varying,
    address character varying(3) DEFAULT NULL::character varying,
    annote character varying(3) DEFAULT NULL::character varying,
    author character varying(3) DEFAULT NULL::character varying,
    booktitle character varying(3) DEFAULT NULL::character varying,
    chapter character varying(3) DEFAULT NULL::character varying,
    comment character varying(3) DEFAULT NULL::character varying,
    crossref character varying(3) DEFAULT NULL::character varying,
    doi character varying(3) DEFAULT NULL::character varying,
    edition character varying(3) DEFAULT NULL::character varying,
    editor character varying(3) DEFAULT NULL::character varying,
    eid character varying(3) DEFAULT NULL::character varying,
    file character varying(3) DEFAULT NULL::character varying,
    howpublished character varying(3) DEFAULT NULL::character varying,
    institution character varying(3) DEFAULT NULL::character varying,
    journal character varying(3) DEFAULT NULL::character varying,
    key_ character varying(3) DEFAULT NULL::character varying,
    keywords character varying(3) DEFAULT NULL::character varying,
    language character varying(3) DEFAULT NULL::character varying,
    location character varying(3) DEFAULT NULL::character varying,
    month character varying(3) DEFAULT NULL::character varying,
    note character varying(3) DEFAULT NULL::character varying,
    number character varying(3) DEFAULT NULL::character varying,
    organization character varying(3) DEFAULT NULL::character varying,
    pages character varying(3) DEFAULT NULL::character varying,
    pdf character varying(3) DEFAULT NULL::character varying,
    pmid character varying(3) DEFAULT NULL::character varying,
    priority character varying(3) DEFAULT NULL::character varying,
    ps character varying(3) DEFAULT NULL::character varying,
    publisher character varying(3) DEFAULT NULL::character varying,
    qualityassured character varying(3) DEFAULT NULL::character varying,
    ranking character varying(3) DEFAULT NULL::character varying,
    relevance character varying(3) DEFAULT NULL::character varying,
    school character varying(3) DEFAULT NULL::character varying,
    search character varying(3) DEFAULT NULL::character varying,
    series character varying(3) DEFAULT NULL::character varying,
    title character varying(3) DEFAULT NULL::character varying,
    type character varying(3) DEFAULT NULL::character varying,
    url character varying(3) DEFAULT NULL::character varying,
    volume character varying(3) DEFAULT NULL::character varying,
    year character varying(3) DEFAULT NULL::character varying
);


ALTER TABLE reference.entry_types OWNER TO oeuser;

--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE; Schema: reference; Owner: oeuser
--

CREATE SEQUENCE entry_types_entry_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE reference.entry_types_entry_types_id_seq OWNER TO oeuser;

--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: oeuser
--

ALTER SEQUENCE entry_types_entry_types_id_seq OWNED BY entry_types.entry_types_id;


--
-- Name: group_types; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE group_types (
    group_types_id integer NOT NULL,
    label character varying(100) DEFAULT NULL::character varying
);


ALTER TABLE reference.group_types OWNER TO oeuser;

--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE; Schema: reference; Owner: oeuser
--

CREATE SEQUENCE group_types_group_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE reference.group_types_group_types_id_seq OWNER TO oeuser;

--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: oeuser
--

ALTER SEQUENCE group_types_group_types_id_seq OWNED BY group_types.group_types_id;


--
-- Name: groups; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE groups (
    groups_id integer NOT NULL,
    group_types_id integer,
    label character varying(100) DEFAULT NULL::character varying,
    database_id integer,
    parent_id integer,
    search_field character varying(100) DEFAULT NULL::character varying,
    search_expression character varying(200) DEFAULT NULL::character varying,
    case_sensitive boolean,
    reg_exp boolean,
    hierarchical_context integer
);


ALTER TABLE reference.groups OWNER TO oeuser;

--
-- Name: groups_groups_id_seq; Type: SEQUENCE; Schema: reference; Owner: oeuser
--

CREATE SEQUENCE groups_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE reference.groups_groups_id_seq OWNER TO oeuser;

--
-- Name: groups_groups_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: oeuser
--

ALTER SEQUENCE groups_groups_id_seq OWNED BY groups.groups_id;


--
-- Name: jabref_database; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE jabref_database (
    database_id integer NOT NULL,
    database_name character varying(64) NOT NULL,
    md5_path character varying(32) NOT NULL
);


ALTER TABLE reference.jabref_database OWNER TO oeuser;

--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE; Schema: reference; Owner: oeuser
--

CREATE SEQUENCE jabref_database_database_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE reference.jabref_database_database_id_seq OWNER TO oeuser;

--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: oeuser
--

ALTER SEQUENCE jabref_database_database_id_seq OWNED BY jabref_database.database_id;


--
-- Name: reference_to_entries; Type: TABLE; Schema: reference; Owner: oeuser; Tablespace: 
--

CREATE TABLE reference_to_entries (
    ref_id bigint NOT NULL,
    ref_data_json json,
    schema_name character varying NOT NULL,
    tbl_name character varying NOT NULL,
    changed_by character varying(20) DEFAULT "current_user"(),
    lastmodified timestamp without time zone DEFAULT now()
);


ALTER TABLE reference.reference_to_entries OWNER TO oeuser;

--
-- Name: strings_strings_id_seq; Type: SEQUENCE; Schema: reference; Owner: oeuser
--

CREATE SEQUENCE strings_strings_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE reference.strings_strings_id_seq OWNER TO oeuser;

--
-- Name: strings_strings_id_seq; Type: SEQUENCE OWNED BY; Schema: reference; Owner: oeuser
--

ALTER SEQUENCE strings_strings_id_seq OWNED BY strings.strings_id;


SET search_path = grid, pg_catalog;

--
-- Name: id; Type: DEFAULT; Schema: grid; Owner: test
--

ALTER TABLE ONLY voronoi ALTER COLUMN id SET DEFAULT nextval('voronoi_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: grid; Owner: test
--

ALTER TABLE ONLY znes_deu_gridcells_qgis ALTER COLUMN id SET DEFAULT nextval('znes_deu_gridcells_qgis_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: grid; Owner: test
--

ALTER TABLE ONLY znes_deu_substations ALTER COLUMN id SET DEFAULT nextval('uw_id_seq'::regclass);


--
-- Name: subst_id; Type: DEFAULT; Schema: grid; Owner: test
--

ALTER TABLE ONLY znes_deu_substations_filtered ALTER COLUMN subst_id SET DEFAULT nextval('znes_deu_substations_filtered_subst_id_seq'::regclass);


SET search_path = public, pg_catalog;

--
-- Name: _id; Type: DEFAULT; Schema: public; Owner: ckan_perm
--

ALTER TABLE ONLY _comment_base ALTER COLUMN _id SET DEFAULT nextval('_comment_base_id_seq'::regclass);


--
-- Name: _id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY _edit_base ALTER COLUMN _id SET DEFAULT nextval('_edit_base__id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ckan_perm
--

ALTER TABLE ONLY ckan_datastore ALTER COLUMN id SET DEFAULT nextval('ckan_datastore_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY tags ALTER COLUMN id SET DEFAULT nextval('tags_id_seq'::regclass);


SET search_path = reference, pg_catalog;

--
-- Name: entries_id; Type: DEFAULT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY entries ALTER COLUMN entries_id SET DEFAULT nextval('entries_entries_id_seq'::regclass);


--
-- Name: entries_id; Type: DEFAULT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY entry_group ALTER COLUMN entries_id SET DEFAULT nextval('entry_group_entries_id_seq'::regclass);


--
-- Name: entry_types_id; Type: DEFAULT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY entry_types ALTER COLUMN entry_types_id SET DEFAULT nextval('entry_types_entry_types_id_seq'::regclass);


--
-- Name: group_types_id; Type: DEFAULT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY group_types ALTER COLUMN group_types_id SET DEFAULT nextval('group_types_group_types_id_seq'::regclass);


--
-- Name: groups_id; Type: DEFAULT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY groups ALTER COLUMN groups_id SET DEFAULT nextval('groups_groups_id_seq'::regclass);


--
-- Name: database_id; Type: DEFAULT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY jabref_database ALTER COLUMN database_id SET DEFAULT nextval('jabref_database_database_id_seq'::regclass);


--
-- Name: strings_id; Type: DEFAULT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY strings ALTER COLUMN strings_id SET DEFAULT nextval('strings_strings_id_seq'::regclass);


SET search_path = grid, pg_catalog;

--
-- Data for Name: deu_voronoi; Type: TABLE DATA; Schema: grid; Owner: test
--

COPY deu_voronoi (id, geom) FROM stdin;
1	0107000020E610000000000000
\.


--
-- Data for Name: substations_deu_voronoi; Type: TABLE DATA; Schema: grid; Owner: test
--

COPY substations_deu_voronoi (lon, lat, voltage, power_typ, osm_id, osm_typ, osm_www, frequency, name, ref, substation, operator, status, visible, geom, subst_id) FROM stdin;
\.


--
-- Data for Name: substations_dummy; Type: TABLE DATA; Schema: grid; Owner: test
--

COPY substations_dummy (subst_id, geom, lon, lat, voltage, power_typ, osm_id, osm_typ, osm_www, frequency, name, ref, substation, operator, status, visible) FROM stdin;
\.


--
-- Name: uw_id_seq; Type: SEQUENCE SET; Schema: grid; Owner: test
--

SELECT pg_catalog.setval('uw_id_seq', 1, false);


--
-- Data for Name: voronoi; Type: TABLE DATA; Schema: grid; Owner: test
--

COPY voronoi (geom, id) FROM stdin;
\.


--
-- Name: voronoi_id_seq; Type: SEQUENCE SET; Schema: grid; Owner: test
--

SELECT pg_catalog.setval('voronoi_id_seq', 1, false);


--
-- Data for Name: znes_deu_gridcells_qgis; Type: TABLE DATA; Schema: grid; Owner: test
--

COPY znes_deu_gridcells_qgis (id, geom, subst_id) FROM stdin;
\.


--
-- Name: znes_deu_gridcells_qgis_id_seq; Type: SEQUENCE SET; Schema: grid; Owner: test
--

SELECT pg_catalog.setval('znes_deu_gridcells_qgis_id_seq', 1, false);


--
-- Data for Name: znes_deu_substations; Type: TABLE DATA; Schema: grid; Owner: test
--

COPY znes_deu_substations (id, lon, lat, voltage, power_typ, osm_id, osm_typ, osm_www, frequency, name, ref, substation, operator, dbahn, status, visible, geom) FROM stdin;
\.


--
-- Data for Name: znes_deu_substations_filtered; Type: TABLE DATA; Schema: grid; Owner: test
--

COPY znes_deu_substations_filtered (lon, lat, voltage, power_typ, osm_id, osm_typ, osm_www, frequency, name, ref, substation, operator, status, visible, geom, subst_id) FROM stdin;
13.2592675324130003	52.9571253774830026	110000	sub_station	1152532181	node	http://www.osm.org/node/1152532181	50	NA	NA	NA	EON_edis	4	1	0101000020E6100000C541C9B6BE842A40073B9915837A4A40	1
\.


--
-- Name: znes_deu_substations_filtered_subst_id_seq; Type: SEQUENCE SET; Schema: grid; Owner: test
--

SELECT pg_catalog.setval('znes_deu_substations_filtered_subst_id_seq', 1, false);


SET search_path = public, pg_catalog;

--
-- Data for Name: _comment_base; Type: TABLE DATA; Schema: public; Owner: ckan_perm
--

COPY _comment_base (_id, origin, method, assumption) FROM stdin;
\.


--
-- Name: _comment_base_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('_comment_base_id_seq', 136, true);


--
-- Data for Name: _edit_base; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY _edit_base (_id, _message, _user, _submitted, _autocheck, _humancheck, _type) FROM stdin;
\.


--
-- Name: _edit_base__id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('_edit_base__id_seq', 106, true);


--
-- Data for Name: _insert_base; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY _insert_base (_message, _user, _submitted, _autocheck, _humancheck, _type) FROM stdin;
\.


--
-- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY alembic_version (version_num) FROM stdin;
\.


--
-- Data for Name: ckan_datastore; Type: TABLE DATA; Schema: public; Owner: ckan_perm
--

COPY ckan_datastore (id, schema, "table", resource, dataset) FROM stdin;
66	test	user	be1ccbe0-4830-48b5-8dda-2f83a204e42d	test
\.


--
-- Name: ckan_datastore_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('ckan_datastore_id_seq', 66, true);


--
-- Name: entries_entries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('entries_entries_id_seq', 1, false);


--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('entry_group_entries_id_seq', 1, false);


--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('entry_types_entry_types_id_seq', 1, false);


--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('group_types_group_types_id_seq', 1, false);


--
-- Name: groups_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('groups_groups_id_seq', 1, false);


--
-- Name: id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('id_seq', 1, false);


--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('jabref_database_database_id_seq', 1, false);


--
-- Data for Name: reference_to_entries; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY reference_to_entries (ref_id, ref_data_json, schema_name, tbl_name, changed_by, lastmodified) FROM stdin;
1	{\n"Name": "parameter_electrical_power_plant",\n"Discription": "Collection pf technical parameter of confentional electrical power plants Example",\n"Table fields": {\n  "fuel":  { \n         "jabref_entries_id":1,\n         "discription": "fuel type"\n         },\n  "size": { \n         "jabref_entries_id":2,\n         "discription": "size"\n         }\n         },   \n    "Note": "Test entry, unusable"}	ref_test	parameter_electrical_power_plant	postgres	2016-06-20 12:00:43.970171
\.


--
-- Data for Name: spatial_ref_sys; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY spatial_ref_sys  FROM stdin;
\.


--
-- Name: strings_strings_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ckan_perm
--

SELECT pg_catalog.setval('strings_strings_id_seq', 1, false);


--
-- Data for Name: table_tags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY table_tags (tag, schema_name, table_name) FROM stdin;
74	supply	renewable_power_plants_germany
75	supply	renewable_power_plants_germany
77	supply	renewable_power_plants_germany
75	grid	voronoi
\.


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY tags (id, name, color) FROM stdin;
73	TestTag	16711680
74	Powerplant	65288
75	Energy	16774922
76	Coal	0
77	Nuclear	7864064
78	Water	13311
79	Blood	16711680
80	Test	10568447
81	Test2	13238271
\.


--
-- Name: tags_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('tags_id_seq', 81, true);


--
-- Data for Name: test_cor; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY test_cor (id, origin, method, assumption) FROM stdin;
\.


SET search_path = reference, pg_catalog;

--
-- Data for Name: entries; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY entries (entries_id, jabref_eid, database_id, entry_types_id, cite_key, abstract, address, annote, author, booktitle, chapter, comment, crossref, doi, edition, editor, eid, file, howpublished, institution, journal, key_, keywords, language, location, month, note, number, organization, pages, pdf, pmid, priority, ps, publisher, qualityassured, ranking, relevance, school, search, series, title, type, url, volume, year) FROM stdin;
1	00000003	1	12	TGHGHTSOGHGH2014	\N	\N	\N	{50Hertz Transmission GmbH} and {Amprion GmbH} and {TenneT TSO GmbH} and {TransnetBW GmbH}	\N	\N	\N	\N	\N	\N	\N	\N	\N	Website	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Netzentwicklungsplan 2014, zweiter Entwurf	\N	http://www.netzentwicklungsplan.de/netzentwicklungsplan-2014-zweiter-entwurf	\N	2014
2	00000004	1	12	TSO2014	\N	\N	\N	{50Hertz Transmission GmbH} and {Amprion GmbH} and {TenneT TSO GmbH} and {TransnetBW GmbH}	\N	\N	\N	\N	\N	\N	\N	\N	Netzentwicklungsplan 2014, erster Entwurf | netzentwicklungsplan.de:/home/leppi/.mozilla/firefox/zhusxgo7.default/zotero/storage/WDN23TSV/netzentwicklungsplan-2014-erster-entwurf.html:text/html	\N	\N	\N	\N	\N	\N	\N	\N	Entnommen des Anhang: Projektsteckbriefe Startnetz und Projektsteckbriefe Zubaunetz. Stand: 16. April 2014.	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Netzentwicklungsplan 2014, erster Entwurf	\N	http://www.netzentwicklungsplan.de/netzentwicklungsplan-2014-erster-entwurf	\N	2014
3	00000015	1	12	BKG2014	\N	\N	\N	{Bundesamt für Kartographie und Geodäsie}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Datensätzen der Verwaltungsgebiete {VG}250, Stand: 31.12.2013	\N	www.geodatenzentrum.de/geodaten/	\N	2014
4	00000016	1	19	BKG2014a	\N	\N	\N	{Bundesamt für Kartographie und Geodäsie}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	{Bundesamt für Kartographie und Geodäsie}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Bundesamt für Kartographie und Geodäsie	\N	\N	\N	\N	\N	\N	Dokumentation: Digitales Landschaftsmodell 1 : 250 000 ({AAA} - Modellierung )	\N	tp://www.geodatenzentrum.de/docpdf/dlm250.pdf	\N	2014
5	00000017	1	12	BKG2014b	\N	\N	\N	{Bundesamt für Kartographie und Geodäsie}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Verwaltungsgebiete 1:250 000 {VG}250 und {VG}250 - {EW}, Stand der Dokumentation: 09.04.2014	\N	http://www.geodatenzentrum.de/docpdf/vg250.pdf	\N	2014
6	00000018	1	12	BKG2014c	\N	\N	\N	{Bundesamt für Kartographie und Geodäsie}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Digitales Landschaftsmodell 1:250.000, {WFS}-Layer	\N	http://sg.geodatenzentrum.de/wfs_dlm250	\N	2014
7	00000019	1	12	BundesamtNaturschutz2015	\N	\N	\N	{Bundesamt für Naturschutz}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	bfn	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	{WFS} Layer der Schutzgebiete von Deutschland	\N	http://geodienste.bfn.de/wfs/schutzgebiete	\N	2015
8	00000035	1	19	EEA2007	\N	\N	\N	EEA	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	European Environment Agency	\N	\N	\N	\N	\N	\N	Online verfügbar unter: \\\\url{http://www.eea.europa.eu/publications/technical_report_2007_17/at_download/file}	17/2007	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	CLC2006 technical guidelines	EEA Technical report	\N	\N	2007
9	00000038	1	12	ENTSOE2014	\N	\N	\N	{ENTSO-E}	\N	\N	\N	\N	\N	\N	{European Network of Transmission System Operators for Electricity}	\N	TYNDP 2014 draft - 141031 TYNDP 2014.pdf:/home/leppi/.mozilla/firefox/zhusxgo7.default/zotero/storage/DPB9C3U6/141031 TYNDP 2014.pdf:application/pdf	\N	\N	\N	\N	\N	\N	Brussel	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	10-Year Network Development Plan 2014	\N	https://www.entsoe.eu/Documents/TYNDP%20documents/TYNDP%202014/141031%20TYNDP%202014.pdf	\N	2014
10	00000039	1	12	EEA2014	\N	\N	\N	{European Environment Agency}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Corine Land Cover 2006 seamless vector data V-3, Datensatz	\N	http://www.eea.europa.eu/data-and-maps/data/clc-2006-vector-data-version-3	\N	2014
11	00000040	1	12	EEA2014a	\N	\N	\N	{European Environment Agency}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Natura 2000 data - the European network of protected sites	\N	http://www.eea.europa.eu/data-and-maps/data/natura-5#tab-gis-data	\N	2014
12	00000043	1	12	OpenStreetMap.org2015	\N	\N	\N	{Geofabrik GmbH }	\N	\N	\N	\N	\N	\N	{Geofabrik GmbH Karlsruhe}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Openstreetmap Foundation	\N	\N	\N	\N	\N	\N	frei zugänglicher {OpenStreetMap} Datensatz von Geofabik GmbH aufbereiter. Stand Januar 2015.	\N	http://download.geofabrik.de/europe/germany-latest.osm.pbf	\N	2015
13	00000052	1	12	Lst2012	\N	\N	\N	{Lst Ökonometrie, Uni Regensburg}	\N	\N	\N	\N	\N	\N	\N	\N	routput.pdf:/home/leppi/.mozilla/firefox/zhusxgo7.default/zotero/storage/7FUI7CXV/routput.pdf:PDF	Website	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Erklärung eines R Outputs	\N	http://www-wiwi.uni-regensburg.de/images/institute/vwl/tschernig/lehre/methoden/routput.pdf	\N	2012
14	00000080	1	12	null	\N	\N	\N	Medjroubi, Wided and Matke, Carsten and Kleinhans, David	\N	\N	\N	\N	\N	\N	\N	\N	\N	online	\N	\N	\N	\N	\N	\N	nov	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	{SciGRID} - {A}n {O}pen {S}ource {R}eference {M}odel for the {E}uropean {T}ransmission {N}etwork (v0.2)	\N	http://www.scigrid.de	\N	2015
15	00000064	1	12	Ramm2014	\N	\N	\N	Ramm, Frederik	\N	\N	\N	\N	\N	\N	{Geofabrik GmbH}	\N	OpenStreetMap Data in Layered GIS-Format - geofabrik-osm-gis-standard-0.6.pdf:/home/leppi/.mozilla/firefox/zhusxgo7.default/zotero/storage/3W8JPBDA/geofabrik-osm-gis-standard-0.6.pdf:application/pdf	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	{OpenStreetMap} Data in Layered {GIS}-Format - Geofabrik. Version 0.6.5 . Stand: 01.11.2014.	\N	http://www.geofabrik.de/data/geofabrik-osm-gis-standard-0.6.pdf	\N	2014
16	00000066	1	12	RegionaldatenbankDeutschland2014	\N	\N	\N	{Regionaldatenbank Deutschland}	\N	\N	\N	\N	\N	\N	{Statistischen Ämter des Bundes und der Länder}	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	\N	Datensätzen der statistischen Ämter des Bundes und der Länder	\N	https://www.regionalstatistik.de/genesis/online/logon	\N	2014
\.


--
-- Name: entries_entries_id_seq; Type: SEQUENCE SET; Schema: reference; Owner: oeuser
--

SELECT pg_catalog.setval('entries_entries_id_seq', 16, true);


--
-- Data for Name: entry_group; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY entry_group (entries_id, groups_id) FROM stdin;
\.


--
-- Name: entry_group_entries_id_seq; Type: SEQUENCE SET; Schema: reference; Owner: oeuser
--

SELECT pg_catalog.setval('entry_group_entries_id_seq', 1, false);


--
-- Data for Name: entry_types; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY entry_types (entry_types_id, label, abstract, address, annote, author, booktitle, chapter, comment, crossref, doi, edition, editor, eid, file, howpublished, institution, journal, key_, keywords, language, location, month, note, number, organization, pages, pdf, pmid, priority, ps, publisher, qualityassured, ranking, relevance, school, search, series, title, type, url, volume, year) FROM stdin;
1	article	gen	gen	gen	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	req	gen	gen	gen	gen	opt	opt	opt	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	req	gen	gen	opt	req
2	book	gen	opt	gen	req	gen	gen	gen	gen	gen	opt	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	opt	gen	gen	gen	gen	gen	gen	req	gen	gen	gen	gen	uti	opt	req	gen	gen	opt	req
3	booklet	gen	opt	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	opt	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	req	gen	gen	gen	opt
4	conference	gen	opt	gen	req	req	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	opt	opt	opt	gen	gen	gen	gen	opt	gen	gen	gen	gen	uti	opt	req	gen	gen	opt	req
5	electronic	gen	opt	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	opt	gen	opt	opt	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	opt	gen	opt	gen	opt
6	ieeetranbstctl	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	gen	gen	gen	gen	gen
7	inbook	gen	opt	gen	req	gen	req	gen	gen	gen	opt	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	opt	gen	req	gen	gen	gen	gen	req	gen	gen	gen	gen	uti	opt	req	opt	gen	opt	req
8	incollection	gen	opt	gen	req	req	opt	gen	gen	gen	opt	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	opt	gen	opt	gen	gen	gen	gen	req	gen	gen	gen	gen	uti	opt	req	opt	gen	opt	req
9	inproceedings	gen	opt	gen	req	req	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	opt	opt	opt	gen	gen	gen	gen	opt	gen	gen	gen	gen	uti	opt	req	gen	gen	opt	req
10	manual	gen	opt	gen	opt	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	req	gen	gen	gen	opt
11	mastersthesis	gen	opt	gen	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	req	uti	gen	req	opt	gen	gen	req
12	misc	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	opt	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	opt	gen	gen	gen	opt
13	other	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	gen	gen	gen	gen	gen
14	patent	gen	opt	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	gen	opt	opt	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	opt	opt	opt	gen	req
15	periodical	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	gen	opt	gen	opt	opt	opt	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	opt	req	gen	opt	opt	req
16	phdthesis	gen	opt	gen	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	req	uti	gen	req	opt	gen	gen	req
17	proceedings	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	opt	opt	opt	gen	gen	gen	gen	gen	opt	gen	gen	gen	gen	uti	opt	req	gen	gen	opt	req
18	standard	gen	opt	gen	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	req	gen	gen	gen	opt	gen	opt	opt	opt	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	req	opt	opt	gen	opt
19	techreport	gen	opt	gen	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	req	gen	gen	gen	gen	gen	opt	opt	opt	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	req	opt	gen	gen	req
20	unpublished	gen	gen	gen	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	opt	req	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	gen	uti	gen	req	gen	gen	gen	opt
\.


--
-- Name: entry_types_entry_types_id_seq; Type: SEQUENCE SET; Schema: reference; Owner: oeuser
--

SELECT pg_catalog.setval('entry_types_entry_types_id_seq', 20, true);


--
-- Data for Name: group_types; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY group_types (group_types_id, label) FROM stdin;
1	AllEntriesGroup:
2	ExplicitGroup:
3	KeywordGroup:
4	SearchGroup:
\.


--
-- Name: group_types_group_types_id_seq; Type: SEQUENCE SET; Schema: reference; Owner: oeuser
--

SELECT pg_catalog.setval('group_types_group_types_id_seq', 4, true);


--
-- Data for Name: groups; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY groups (groups_id, group_types_id, label, database_id, parent_id, search_field, search_expression, case_sensitive, reg_exp, hierarchical_context) FROM stdin;
1	1	Alle Einträge	1	0	\N	\N	\N	\N	0
\.


--
-- Name: groups_groups_id_seq; Type: SEQUENCE SET; Schema: reference; Owner: oeuser
--

SELECT pg_catalog.setval('groups_groups_id_seq', 1, true);


--
-- Data for Name: jabref_database; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY jabref_database (database_id, database_name, md5_path) FROM stdin;
1	oedb_references	f668a6234acc9a2c94e14b6fe1e32a02
\.


--
-- Name: jabref_database_database_id_seq; Type: SEQUENCE SET; Schema: reference; Owner: oeuser
--

SELECT pg_catalog.setval('jabref_database_database_id_seq', 1, true);


--
-- Data for Name: reference_to_entries; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY reference_to_entries (ref_id, ref_data_json, schema_name, tbl_name, changed_by, lastmodified) FROM stdin;
1	{\n"titel": "parameter_electrical_power_plant",\n"discription": "Technical parameter of confentional electrical power plants Example",\n"attribute": {\n  "fuel":  { \n         "name": "fuel",\n         "jabref_entries_id":1,\n         "discription": "fuel type"\n         },\n  "size": { \n         "name": "size",\n         "jabref_entries_id":2,\n         "discription": "size"\n         }\n         },   \n    "note": "Test entry, unusable"}	ref_test	parameter_electrical_power_plant	wolf_bunke	2016-03-17 15:37:24.538213
2	{\n"titel": "parameter_electrical_power_plant",\n"discription": "Technical parameter of confentional electrical power plants Example",\n"attribute": {\n  "fuel":  { \n         "name": "fuel",\n         "jabref_entries_id":1,\n         "discription": "fuel type"\n         },\n  "size": { \n         "name": "size",\n         "jabref_entries_id":2,\n         "discription": "size"\n         }\n         },   \n    "note": "Test entry, unusable"}	ref_test	parameter_electrical_power_plant	wolf_bunke	2016-03-17 15:37:34.633776
\.


--
-- Data for Name: strings; Type: TABLE DATA; Schema: reference; Owner: oeuser
--

COPY strings (strings_id, label, content, database_id) FROM stdin;
\.


--
-- Name: strings_strings_id_seq; Type: SEQUENCE SET; Schema: reference; Owner: oeuser
--

SELECT pg_catalog.setval('strings_strings_id_seq', 1, false);


SET search_path = grid, pg_catalog;

--
-- Name: Netzinsel_110kV_open_eGo_pkey; Type: CONSTRAINT; Schema: grid; Owner: test; Tablespace: 
--

ALTER TABLE ONLY znes_deu_substations
    ADD CONSTRAINT "Netzinsel_110kV_open_eGo_pkey" PRIMARY KEY (id);


--
-- Name: deu_voronoi_pkey; Type: CONSTRAINT; Schema: grid; Owner: test; Tablespace: 
--

ALTER TABLE ONLY deu_voronoi
    ADD CONSTRAINT deu_voronoi_pkey PRIMARY KEY (id);


--
-- Name: substations_dummy_pkey; Type: CONSTRAINT; Schema: grid; Owner: test; Tablespace: 
--

ALTER TABLE ONLY substations_dummy
    ADD CONSTRAINT substations_dummy_pkey PRIMARY KEY (subst_id);


--
-- Name: voronoi_pkey; Type: CONSTRAINT; Schema: grid; Owner: test; Tablespace: 
--

ALTER TABLE ONLY voronoi
    ADD CONSTRAINT voronoi_pkey PRIMARY KEY (id);


--
-- Name: znes_deu_gridcells_qgis_pkey; Type: CONSTRAINT; Schema: grid; Owner: test; Tablespace: 
--

ALTER TABLE ONLY znes_deu_gridcells_qgis
    ADD CONSTRAINT znes_deu_gridcells_qgis_pkey PRIMARY KEY (id);


--
-- Name: znes_deu_substations_filtered_pkey; Type: CONSTRAINT; Schema: grid; Owner: test; Tablespace: 
--

ALTER TABLE ONLY znes_deu_substations_filtered
    ADD CONSTRAINT znes_deu_substations_filtered_pkey PRIMARY KEY (subst_id);


SET search_path = public, pg_catalog;

--
-- Name: _comment_base_pkey; Type: CONSTRAINT; Schema: public; Owner: ckan_perm; Tablespace: 
--

ALTER TABLE ONLY _comment_base
    ADD CONSTRAINT _comment_base_pkey PRIMARY KEY (_id);


--
-- Name: ckan_datastore_pkey; Type: CONSTRAINT; Schema: public; Owner: ckan_perm; Tablespace: 
--

ALTER TABLE ONLY ckan_datastore
    ADD CONSTRAINT ckan_datastore_pkey PRIMARY KEY (id);


--
-- Name: reference_to_entries_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY reference_to_entries
    ADD CONSTRAINT reference_to_entries_pkey PRIMARY KEY (ref_id);


--
-- Name: tags_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


SET search_path = reference, pg_catalog;

--
-- Name: entries_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY entries
    ADD CONSTRAINT entries_pkey PRIMARY KEY (entries_id);


--
-- Name: entry_group_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY entry_group
    ADD CONSTRAINT entry_group_pkey PRIMARY KEY (groups_id, entries_id);


--
-- Name: entry_types_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY entry_types
    ADD CONSTRAINT entry_types_pkey PRIMARY KEY (entry_types_id);


--
-- Name: group_types_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY group_types
    ADD CONSTRAINT group_types_pkey PRIMARY KEY (group_types_id);


--
-- Name: groups_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY groups
    ADD CONSTRAINT groups_pkey PRIMARY KEY (groups_id);


--
-- Name: jabref_database_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY jabref_database
    ADD CONSTRAINT jabref_database_pkey PRIMARY KEY (database_id);


--
-- Name: reference_to_entries_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY reference_to_entries
    ADD CONSTRAINT reference_to_entries_pkey PRIMARY KEY (ref_id);


--
-- Name: strings_pkey; Type: CONSTRAINT; Schema: reference; Owner: oeuser; Tablespace: 
--

ALTER TABLE ONLY strings
    ADD CONSTRAINT strings_pkey PRIMARY KEY (strings_id);


SET search_path = grid, pg_catalog;

--
-- Name: voronoi_geom_idx; Type: INDEX; Schema: grid; Owner: test; Tablespace: 
--

CREATE INDEX voronoi_geom_idx ON voronoi USING gist (geom);


--
-- Name: voronoi_germany_geom_idx; Type: INDEX; Schema: grid; Owner: test; Tablespace: 
--

CREATE INDEX voronoi_germany_geom_idx ON deu_voronoi USING gist (geom);


--
-- Name: znes_deu_gridcells_qgis_geom_idx; Type: INDEX; Schema: grid; Owner: test; Tablespace: 
--

CREATE INDEX znes_deu_gridcells_qgis_geom_idx ON znes_deu_gridcells_qgis USING gist (geom);


--
-- Name: subst_id_fkey; Type: FK CONSTRAINT; Schema: grid; Owner: test
--

ALTER TABLE ONLY znes_deu_gridcells_qgis
    ADD CONSTRAINT subst_id_fkey FOREIGN KEY (subst_id) REFERENCES znes_deu_substations_filtered(subst_id);


SET search_path = public, pg_catalog;

--
-- Name: table_tags_tag_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY table_tags
    ADD CONSTRAINT table_tags_tag_fkey FOREIGN KEY (tag) REFERENCES tags(id);


SET search_path = reference, pg_catalog;

--
-- Name: entries_database_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY entries
    ADD CONSTRAINT entries_database_id_fkey FOREIGN KEY (database_id) REFERENCES jabref_database(database_id);


--
-- Name: entries_entry_types_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY entries
    ADD CONSTRAINT entries_entry_types_id_fkey FOREIGN KEY (entry_types_id) REFERENCES entry_types(entry_types_id);


--
-- Name: entry_group_entries_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY entry_group
    ADD CONSTRAINT entry_group_entries_id_fkey FOREIGN KEY (entries_id) REFERENCES entries(entries_id) ON DELETE CASCADE;


--
-- Name: entry_group_groups_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY entry_group
    ADD CONSTRAINT entry_group_groups_id_fkey FOREIGN KEY (groups_id) REFERENCES groups(groups_id);


--
-- Name: groups_database_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY groups
    ADD CONSTRAINT groups_database_id_fkey FOREIGN KEY (database_id) REFERENCES jabref_database(database_id);


--
-- Name: strings_database_id_fkey; Type: FK CONSTRAINT; Schema: reference; Owner: oeuser
--

ALTER TABLE ONLY strings
    ADD CONSTRAINT strings_database_id_fkey FOREIGN KEY (database_id) REFERENCES jabref_database(database_id);


SET search_path = public, pg_catalog;

--
-- Name: meta_search; Type: MATERIALIZED VIEW DATA; Schema: public; Owner: postgres
--

REFRESH MATERIALIZED VIEW meta_search;


--
-- PostgreSQL database dump complete
--

